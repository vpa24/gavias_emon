{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% if content.field_hide_flag['#items'][0].getString() != '1' %}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }} style="clear: left">
    {% block content %}


{#  video player only #}
{% if content.field_body|render|striptags|trim is empty %}
<div class="larger-container gbb-row" style="padding-top:30px; padding-bottom:20px">
  <div class="bb-inner default">
    <div class="bb-container ">
      <div class="row">
        <div class="row-wrapper clearfix">

            <div class="gsc-column col-lg-12 col-md-12 col-sm-12 col-xs-12">
              <div class="column-inner  bg-size-cover">
                <div class="column-content-inner">
                  <div class="widget gsc-block-drupal title-align-left  hidden-title-on remove-margin-on text-dark">
                    <div class="videowrapper"
                      {% if content.field_css['#items'][0].getString() is not empty %}
                        style="{{ content.field_css['#items'][0].getString() }}"
                      {% endif %}
                    >
                      {{ content.field_video_player }}
                    </div>
                    {{ content.field_thumbnail_list }}
                  </div>
                </div>
              </div>
            </div>


        </div>
      </div>
    </div>
  </div>
</div>

{#  video player and text #}
{% else %}
<div class="larger-container gbb-row" style="padding-top:30px; padding-bottom:20px">
  <div class="bb-inner default">
    <div class="bb-container container">
      <div class="row">
        <div class="row-wrapper clearfix">

            <div class="gsc-column col-lg-6 col-md-6 col-sm-12 col-xs-12">
              <div class="column-inner  bg-size-cover">
                <div class="column-content-inner">


                  {% if content.field_player_position['#items'][0].getString() == 'Left' %}
                      <div class="widget gsc-block-drupal title-align-left  hidden-title-on remove-margin-on text-dark">
                          <div class="videowrapper"
                            {% if content.field_css['#items'][0].getString() is not empty %}
                                style="{{ content.field_css['#items'][0].getString() }}"
                            {% endif %}
                          >
                            {{ content.field_video_player }}
                          </div>

                          {{ content.field_thumbnail_list }}
                      </div>
                  {% else %}
                      <div class="widget gsc-heading  align-left style-1 text-dark ">
                          {{ content.field_body }}
                      </div>
                  {% endif %}



                </div>
              </div>
            </div>
            <div class="gsc-column col-lg-6 col-md-6 col-sm-12 col-xs-12">
              <div class="column-inner  bg-size-cover">
                <div class="column-content-inner">


                {% if content.field_player_position['#items'][0].getString() == 'Left' %}
                    <div class="widget gsc-heading  align-left style-1 text-dark ">
                        {{ content.field_body }}
                    </div>

                {% else %}
                    <div class="widget gsc-block-drupal title-align-left  hidden-title-on remove-margin-on text-dark">
                        <div class="videowrapper"
                          {% if content.field_css['#items'][0].getString() is not empty %}
                              style="{{ content.field_css['#items'][0].getString() }}"
                          {% endif %}
                        >
                          {{ content.field_video_player }}
                        </div>

                        {{ content.field_thumbnail_list }}
                    </div>
                {% endif %}


                </div>
              </div>
            </div>


        </div>
      </div>
    </div>
  </div>
</div>
{% endif %}







    {% endblock %}
  </div>
{% endblock paragraph %}


{% endif %}