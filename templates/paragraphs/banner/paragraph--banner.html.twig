{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  ]
%}
{% set bannerId = '.banner' ~ paragraph.id.value ~ '.landing1-banner ' %}
{{ content.field_banner_css[0]['#text']|replace({'.landing1-banner ': bannerId })|raw }}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

      {% set banner_class = (content.field_layout['#items'][0].getString() == 'Box') ? 'landing1-banner-box' : 'landing1-banner' %}

      <div class="{{ banner_class }} banner{{ paragraph.id.value }} banner" 
          {% if file_url(paragraph.field_banner_background.entity.fileuri) != '/' %}
              style="background-image: url({{ file_url(paragraph.field_banner_background.entity.fileuri) }})"
          {% endif %}
      >

          {% if content.field_add_overlay['#items'][0].getString() == '1' %}
              <div class="overlay"> </div>
          {% endif %}
          {% if content.field_add_supermicro_logo['#items'][0].getString() == '1' %}
              <div>
                  <a href="/index_home.cfm{{langlink}}" title="Home" rel="home" class="site-branding-logo padding-top-20" style="position: absolute; top: 0px; left: -15px">
                    <img src="/sites/default/files/logos/Supermicro_GreenC_NewLogo_DarkBackground_s.png" alt="Supermicro" style="width:80%">
                  </a>
              </div>
          {% endif %}

          <div class="landing1-banner-title">
              {% if paragraph.field_banner_title.entity.fileuri|render is not empty %}                  
                  <img src="{{ file_url(paragraph.field_banner_title.entity.fileuri) }}"  height="80" alt="" typeof="foaf:Image" />
              {% endif %}
          </div>
          {% if content.field_banner_text|render is not empty %}
              <div class="landing1-banner-text">
                  {{ content.field_banner_text }}
              </div>
          {% endif %}              

          {% set total = 0 %}
          {% for key, item in content.field_banner_products if key|first != '#' %}
              {% set total = total + 1 %}
          {% endfor %}
          <div class="landing1-banner-products total{{ total }}">
            {% for key, item in content.field_banner_products if key|first != '#' %}
                {{ content.field_banner_products[loop.index0] }} <br>
            {% endfor %}
          </div>

          {% if content.field_banner_text_bottom|render is not empty %}
              <div class="landing1-banner-text-bottom">
                  {{ content.field_banner_text_bottom }}
              </div>
          {% endif %}

{#
          {% for key, item in content.field_banner_button if key|first != '#' %}
              <div class="banner-button">
                  <div class="gavias-slide-bottom">
                      <div class="slider-action">
                            <a class="btns btn-slide btn-slide-outline" href="{{ content.field_banner_button[0]. }}" tabindex="-1">{{ content.field_banner_button_label }}</a>
                      </div>
                  </div>
              </div>
          {% endfor %}
#}

      </div>

    {% endblock %}
  </div>
{% endblock paragraph %}
